<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk" ToolsVersion="15.0">
  <PropertyGroup>
    <AllowedReferenceRelatedFileExtensions>.pdb</AllowedReferenceRelatedFileExtensions>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworks>net40</TargetFrameworks>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Packaging|AnyCPU'">
    <OutputPath>bin\Packaging\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <LangVersion>6</LangVersion>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="System.Management.Automation" Version="6.1.*" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="*.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="*.ps*">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\ServiceControlInstaller.Engine\ServiceControlInstaller.Engine.csproj" />
  </ItemGroup>
  <UsingTask TaskName="FileUpdate" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <Files ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
      <Pattern ParameterType="System.String" Required="true" />
      <ReplacementText ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.Text.RegularExpressions" />
      <Using Namespace="System.IO" />
      <Code Type="Fragment" Language="cs"><![CDATA[
               RegexOptions options = RegexOptions.Multiline | RegexOptions.IgnoreCase;
               if (Files.Length > 0)  
               {  
                    for (int i = 0; i<Files.Length; i++)  
                    {  
                        string path = Files[i].GetMetadata("FullPath");
                        File.WriteAllText(path, Regex.Replace(File.ReadAllText(path), Pattern, ReplacementText, options));
                    }  
                }  
            ]]></Code>
    </Task>
  </UsingTask>
  <Target Name="AfterBuild">
    <ItemGroup>
      <PSModuleFile Include="$(OutputPath)\ServiceControlMgmt.psd1" />
    </ItemGroup>
    <GetVersion SolutionDirectory="$(SolutionDir)">
      <Output TaskParameter="MajorMinorPatch" PropertyName="MajorMinorPatch" />
    </GetVersion>
    <FileUpdate Files="@(PSModuleFile)" Pattern="{{Version}}" ReplacementText="$(MajorMinorPatch)" />
  </Target>
</Project>